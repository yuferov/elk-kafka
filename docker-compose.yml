version: "3"
services:
  elasticsearch:
    image: "${ELK_REPO}/elasticsearch/elasticsearch:${ELK_TAG}"
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    networks:
      elk-kafka:
        aliases:
          - elasticsearch

  kibana:
    image: "${ELK_REPO}/kibana/kibana:${ELK_TAG}"
    container_name: kibana
    ports: 
      - "5601:5601"
    networks:
      elk-kafka:
        aliases:
          - kibana
    depends_on:
      - elasticsearch

  filebeat:
    user: root
    image: "${ELK_REPO}beats/filebeat:${ELK_TAG}"
    container_name: filebeat
    volumes:
      - "${FILEBEAT_CONF}:/usr/share/filebeat/filebeat.yml"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on: 
      - elasticsearch
      - kibana
      - zookeeper
      - kafka
    networks:
      elk-kafka:         
        aliases:
          - filebeat
    restart: on-failure
    command: filebeat -e -strict.perms=false

  zookeeper:
    image: "${CONFLUENT_REPO}/cp-zookeeper:${CONFLUENT_TAG}"
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    networks:
      elk-kafka:
        aliases:
          - zookeeper
    restart: on-failure

  kafka:
    image: "${CONFLUENT_REPO}/cp-kafka:${CONFLUENT_TAG}"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${SERVER_IP}:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 
    depends_on:
      - zookeeper
    networks:
      elk-kafka:
        aliases:
          - kafka
  
networks:
  elk-kafka:
    driver: bridge
